Changed stdtypes.h.in  (and pfconfig/headers/stdtypes.h) to be updated for newer code (Unix)
Added Phil's Erat support in PFGlue/PrimeGenerator.cpp
PaulJ created a new hi-res timer class
Added timer class to bench.cpp, pfgw_main.cpp, 
Added timer class to gf_factorize so that less output to screen happens (on small numbers)
Changed the GMP/Woltman "breakover" points to depend upon SSE2 and non-SSE2 FFT's (they are different timings)
Use hi-res timer to calculate the "overhead" during prp/testing runtime. There are now 2 times shown
Added cleanup and init functions to pfgw_main.  Simply cut the existing code and put it there.
Don't show the "ABCD" transitions (concatenated ABCD file).
Fixed major memory leaks when processing concatenated ABCD files.
Significant changes to PFIni.  Dealing with Unix and multiple ini objects (and INI access from threads
   that did not create the object.  While not perfect, it is much better.
Unix changes in zlib.cpp

Updates to PFGW_ServerV2 to do these things:
  0.  Transfer size up'd to 256k and up to 75,000 candidates allowed (and
      overflow crashes fixed)
  1.  Compute "score" which are PII 400 CPU days (based on proth FFT's
      used, for Fermat Factor work)
  2.  Dynamic adding of clients
  3.  Long term tracking of clients
  4.  Validating clients sent all data and tracking of what data they have.
  5.  Sorting (up or down) of any column.
  6.  Handling of ABC or NewPGen files "natively"
  7.  Correctly place data into the "same" output files as the input file.
      Now when a file has all it's data "sent" out, it is not removed from
      the list.  It is only
      removed from the list when all data has been returned. 
  8.  Allow 4 files (instead of 3)
  9.  When files are completed (and all data returned), a line is added
      (with the date/time) to the message line.
  10. Correct number of "connected" clients is shown on the dialog.
  11. Several memory leaks fixed (all messages without prime/comp data
      being sent were leaking)
  
Updates to WinPFGW
  1.  Flashing icon (when work completes)
  2.  Color changing icon (depending upon working or not working)
  3.  A new "dialog" box that pops up when work is done.
  4.  Tool tip shows if WinPFGW is running or not.
  5.  Some multi-threading issues worked on in INI class (but not fully sure
      it is correct yet)
  