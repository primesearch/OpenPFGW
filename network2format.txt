PFGW can now support a second version networking client server using
TCP/IP (only in the Win32 executable)

NOTE this format is VERY MUCH work in progress.  I am actively working on
the NETWORK2 format.  I plan on making this format usable for large numbers,
small numbers, LAN's, dialups, ....  Once WinPFGW starts processing using
this format, it will not exit.  It simply "sleeps" when the server has no
work to do, or is down.  Also, connection with the server does not have to
be maintained, but will be established at each transfer.  I will also be
using zLib compression (optional) so reduce the size of xfers.  I plan on
implementing sending of files to be processed, so a ABC or NewPGen file, or
part of a larger file, can be sent to the clients to work on.  A server is
also being developed. 

To use this feature simply write a file of this format:
NETWORK2
host
port
lines of work to buffer[,v][,c][,r][,a]

eg:
NETWORK2
127.0.0.1
12984
100,c,v,r

or

NETWORK2
25.4.16.183
12984
2

(Note the above 25.4.16.183 is a fictional IP, do not use it)

The protocol is very simple.  Once PFGW has connected to a server it sends
"GN <number of expressions it wants>" to the server.  eg. "GN 100".  It then
expects a list of expresions back, separated by carriage returns - it may be
any number of expressions up to the requested number.  If any are prime then
it will return "PR <expression>".  If it does not test an expression then it
sends "ND <expression>" (this is only sent when PFGW is exited using Ctrl-C).  
It does not confirm expressions are composite to save on bandwidth, but this
may change in the future if anyone feels it is necessary.

A server is in the works, but not yet complete.

,v  is for verbose mode,
,c  is for composite mode.  In composite mode, the composites are sent to
    the server (looking like primes, since all it handles are primes), but
    each candidate is prepended with a C_ string.  (NOTE Not sending composites
    will cause resuming of the data files to redo the composite numbers of the
    current working set if a client exits and restarts).  It is HIGHLY recommened
    to NOT run without the ,c composite mode.
,r  Send the (base^(n-1)%n)%(2^62) residue also (composites only in prp mode)
    This could be used for secondary validation of the composites.
,a  abort when exiting.  In this mode, there will be not "caching of work" upon
    pfgw exiting.  When PFGW exits (gracefully), it will simply return all 
    undone work (using the "ND <expression>" values).  If the ,a is NOT there,
    then PFGW will store the lines to process, and when restarting it will simply
    continue forward from that point.   All that is sent to the server upon 
    exiting (gracefully), is the completed work, and a notification to the 
    server that we are going away for a while.  The ,a mode 
,nm (V3 feature) Do NOT allow messages to be sent.  By default Messages are sent
    from the server and a "messagebox" like dialog is displayed.  These message
    are (or should be) Pretty RARE events.  Things such as a new better version
    of WinPFGW, that should be downloaded and installed are


**************************************************************************************
Low level protocol (V2.01):

 Messages from Client to server:
  - LI MachineName\n     Login to server  (also sends "OP" messages)
  - LO MachineName\n     Logout of server
  - GN #\n               Get numbers (expressions or "text" file lines)
  - ND Expr\n            Not Done (Client did not do this)
  - OP CompressionOK\n   Server can send compressed data to 
  - OP NOCompression\n   Server should NOT reply with zlib compressed data.
  - OP Proto_v_2_01\n    Client using V2.01 protocol
  - PR expr\n            expr was prime (prp)
  - PR C_expr\n          expr was composite

 Messages from server to client
  The server returns a tcp_ver2_xfer structure (possibly compressed).  Only
  the cpData[] array is compressed. This file is documented in tcp_ver2_xfer.h.
  The cpData[] array can contain:
   - NoData\n                 No data from server at this time (try later)
   - expr\nexpr\nexpr\n...    Work for client (a "free-form" file)
   - a "formatted txt" file   Work for client (ABC/NewPGen file with valid first line)

   // These 2 fields in the tcp_ver2_xfer are currently unused.
   uint8   u8Command;
   uint8   u8ProtocolVersion;
**************************************************************************************

NOTE this protocol is not "live" but is on the drawing board.

Low Level protocol (V3.00)  Adds these messages:

 Messages from Client to server:
  - OP Proto_V_3_00\n    Version 3.00 protocol
  - MI string_data       Machine Information (server can ask for this)
  - a whole file         (to send a whole file back).
  - PN Prepare numbers.  This is an "early" call to the server to tell it that the client will
                         "soon" ask the server for this many numbers.  It allows the server to
                         have some offline time (to spawan a thread) to get this many data
                         points ready in a file.

 Messages from Server to client:
  - RI                   Request Machinge information
  - SM message_text      Show the "message_text" message to the user (ie a messagebox)
                         The "message_text" will be encrypted.  Messages are "enabled"
                         by a switch in the PFGW.ini file
  
 u8ProtocolVersion set to 3 in all xfer structures (if client states it is a Proto_V_3_00

 u8Commands:
   0.    V2 commands
   100.  a whole file of "unknowns" to process.  (from server)
   200.  a file of prp's (from client).
   201.  a file of composites.

